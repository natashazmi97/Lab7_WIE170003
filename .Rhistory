title <- html_text(title_html)
head(title)
str_replace_all(title,"[\r\n]","")
price_html <- html_nodes(webpage,'span#priceblock_outprice')
price <- html_text(price_html)
str_replace_all(title,"[\r\n]","")
head(price)
desc_html <- html_nodes(webpage,'div#productDescription')
desc <- html_text(desc_html)
desc <- str_replace_all(desc,"[\r\n\t]","")
desc <- str_trim(desc)
head(desc)
rate_html <- html_nodes(webpage,'span#acrPopover')
rate <- html_text(rate_html)
rate <- str_replace_all(rate,"[\r\n]","")
rate <- str_trim(rate)
head(rate)
color_html <- html_nodes(webpage,'div#variation_color_name')
color_html <- html_nodes(color_html,'span.selection')
color <- html_text(color_html)
color <- str_trim(color)
head(color)
product_data <- data.frame(Title = title,Price = price,Description = desc,Rating = rate ,Size = size,Color = color)
str(product_data)
json_data <- toJSON(product_data)
cat(json_data)
install.packages("memisc")
library(memisc)
x <- data.set(Orange)
typeof(x)
[1]"list"
install.packages("memisc")
library(memisc)
x <- data.set(Orange)
typeof(x)
[1]"list"
x
codebook(x)
summary(x)
install.packages("memisc")
install.packages("memisc")
install.packages("memisc")
install.packages("memisc")
install.packages("memisc")
install.packages("dataMaid")
library(dataMaid)
data(mtcars)
makeCodebook(mtcars)
x<- data.set(Orange)
class(Orange)
[1]"nfnGroupedData" "nfGroupedData" "groupedData" "data.frame"
sapply(Orange, class)
$Tree
[1] "ordered" "factor"
$age
[1]"numeric"
$circumference
[1]"numeric"
sapply(Orange,min)
install.packages("dataMaid")
library(dataMaid)
data(mtcars)
makeCodebook(mtcars)
x<- data.set(Orange)
class(Orange)
[1]"nfnGroupedData" "nfGroupedData" "groupedData" "data.frame"
sapply(Orange, class)
$Tree
[1] "ordered" "factor"
$age
[1]"numeric"
$circumference
[1]"numeric"
sapply(Orange,min)
sapply(Orange,max)
sapply(Orange,range)
install.packages("dataMaid")
attitude[4]
attitude$learning
attitude[4]
str(variables)
str(variable)
str(variable)
str(attitude)
nrow(attitude)
ncol(attitude)
str(attitude)
names(attitude)
head(dnow,6)
head(drow,6)
attitude(1:6)
attitude[1:6]
attitude[1:15,]
head(attitude,n=15)
attitude[1:29,]
tail(attitude,n=6)
tail(attitude,n=12)
attitude[31:0,]
attitude[31:1,]
tail(attitude,n=29)
is.na(attitude)
is.na(attitude$rating)
par(mar =c(5,4,1,1,),las =1)
x <- rnorm(100)
y <- x+rnorm(100,sd=0.5)
par(mar =c(5,4,1,1,),las =1)
cars <- c(5,9,8,1,7)
plot(cars)
plot(attitude)
attitude[4]
attitude$learning
nrow(attitude)
ncol(attitude)
str(attitude)
attitude[1:6]
head(attitude,n=15)
attitude[1:29,]
tail(attitude,n=6)
tail(attitude,n=12)
tail(attitude,n=29)
is.na(attitude)
is.na(attitude$rating)
plot(attitude)
png("C:temp/graph1.png")
png("C:temp/graph1.png")
png("C:temp/graph1.png")
pdf("graph.pdf)
plot(attitude)
dev.off()
pdf("figure.pdf")
plot(attitude)
dev.off()
install.packages('selectr')
install.packages('xml2')
install.packages('rvest')
install.packages('stringr')
install.packages('jsonlite')
library(xml2)
library(rvest)
library(stringr)
url <-'https://www.amazon.in/OnePlus-Mirror-Black-64GB-Memory/dp/B0756Z43QS?tag=googinhydr18418-21&tag=googinkenshoo-21&ascsubtag=aee9a916-6acd-4409-92ca-3bdbeb549f80'
webpage <- read_html(url)
title_html <- html_nodes(webpage, 'h1#title')
title <- html_text(title_html)
head(title)
str_replace_all(title,"[\r\n]","")
install.packages("htmltools")
install.packages('selectr')
install.packages('xml2')
install.packages('rvest')
install.packages('stringr')
install.packages('jsonlite')
library(xml2)
library(rvest)
library(stringr)
url <-'https://www.amazon.in/OnePlus-Mirror-Black-64GB-Memory/dp/B0756Z43QS?tag=googinhydr18418-21&tag=googinkenshoo-21&ascsubtag=aee9a916-6acd-4409-92ca-3bdbeb549f80'
webpage <- read_html(url)
title_html <- html_nodes(webpage, 'h1#title')
title <- html_text(title_html)
head(title)
str_replace_all(title,"[\r\n]","")
install.packages("htmltools")
install.packages('selectr')
install.packages('xml2')
install.packages('rvest')
install.packages('stringr')
install.packages('jsonlite')
library(xml2)
library(rvest)
library(stringr)
url <-'https://www.amazon.in/OnePlus-Mirror-Black-64GB-Memory/dp/B0756Z43QS?tag=googinhydr18418-21&tag=googinkenshoo-21&ascsubtag=aee9a916-6acd-4409-92ca-3bdbeb549f80'
webpage <- read_html(url)
title_html <- html_nodes(webpage, 'h1#title')
title <- html_text(title_html)
head(title)
str_replace_all(title,"[\r\n]","")
install.packages("htmltools")
install.packages("xml2")
install.packages("rvest")
install.packages("htmltools")
install.packages("selectr")
install.packages("xml2")
install.packages("selectr")
#Plot 1
setwd("C:\Users\User\Desktop")
#load library data.table
library(data.table)
DT<-fread("C:\Users\User\Desktop./household_power_consumption.txt", na.strings="?")
#set date as d:m:y
DT$strDate <- as.Date(DT$Date,"%d/%m/%Y")
#select data
DT.filter<-DT[DT$strDate=="2007-02-01" | DT$strDate=="2007-02-02",]
DT.filter$Global_active_power<-as.numeric(DT.filter$Global_active_power)
rm(DT)
#output histogram to PNG
png(filename="plot1.png", width=480, height=480)
hist(DT.filter$Global_active_power,
col="red",
xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off()
DT<-fread("C:/Users/User/Desktop/Lab7/household_power_consumption.txt", na.strings="?")
DT<-fread("./household_power_consumption.txt", na.strings="?")
setwd("C:/Users/User/Desktop\Lab7")
#load library data.table
library(data.table)
DT<-fread("./household_power_consumption.txt", na.strings="?")
#set date as d:m:y
DT$strDate <- as.Date(DT$Date,"%d/%m/%Y")
#select data
DT.filter<-DT[DT$strDate=="2007-02-01" | DT$strDate=="2007-02-02",]
DT.filter$Global_active_power<-as.numeric(DT.filter$Global_active_power)
rm(DT)
#output histogram to PNG
png(filename="plot1.png", width=480, height=480)
hist(DT.filter$Global_active_power,
col="red",
xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off()
#Plot 1
setwd("C:/Users/User/Desktop\Lab7")
#load library data.table
library(data.table)
DT<-fread("./household_power_consumption.txt", na.strings="?")
#set date as d:m:y
DT$strDate <- as.Date(DT$Date,"%d/%m/%Y")
#select data
DT.filter<-DT[DT$strDate=="2007-02-01" | DT$strDate=="2007-02-02",]
DT.filter$Global_active_power<-as.numeric(DT.filter$Global_active_power)
rm(DT)
#output histogram to PNG
png(filename="plot1.png", width=480, height=480)
hist(DT.filter$Global_active_power,
col="red",
xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off()
#Plot 1
setwd("C:/Users/User/Desktop\Lab7")
#load library data.table
library(data.table)
DT<-fread("./household_power_consumption.txt", na.strings="?")
#set date as d:m:y
DT$strDate <- as.Date(DT$Date,"%d/%m/%Y")
#select data
DT.filter<-DT[DT$strDate=="2007-02-01" | DT$strDate=="2007-02-02",]
DT.filter$Global_active_power<-as.numeric(DT.filter$Global_active_power)
rm(DT)
#output histogram to PNG
png(filename="plot1.png", width=480, height=480)
hist(DT.filter$Global_active_power,
col="red",
xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off()
#set working directory
setwd("C:/Users/User/Desktop\Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
#set working directory
setwd("C:/Users/User/Desktop\Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
#set working directory
setwd("C:/Users/User/Desktop\Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
#Plot 1
setwd("C:/Users/User/Desktop\Lab7")
#load library data.table
library(data.table)
DT<-fread("./household_power_consumption.txt", na.strings="?")
#set date as d:m:y
DT$strDate <- as.Date(DT$Date,"%d/%m/%Y")
#select data
DT.filter<-DT[DT$strDate=="2007-02-01" | DT$strDate=="2007-02-02",]
DT.filter$Global_active_power<-as.numeric(DT.filter$Global_active_power)
rm(DT)
#output histogram to PNG
png(filename="plot1.png", width=480, height=480)
hist(DT.filter$Global_active_power,
col="red",
xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off()
#set working directory
setwd("C:/Users/User/Desktop\Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
#set working directory
setwd("C:/Users/User/Desktop\Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
#set working directory
setwd("C:/Users/User/Desktop\Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
setwd("C:/Users/User/Desktop/Lab7")
#load library data.table
library(data.table)
DT<-fread("./household_power_consumption.txt", na.strings="?")
#set date as d:m:y
DT$strDate <- as.Date(DT$Date,"%d/%m/%Y")
#select data
DT.filter<-DT[DT$strDate=="2007-02-01" | DT$strDate=="2007-02-02",]
DT.filter$Global_active_power<-as.numeric(DT.filter$Global_active_power)
rm(DT)
#output histogram to PNG
png(filename="plot1.png", width=480, height=480)
hist(DT.filter$Global_active_power,
col="red",
xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off()
setwd("C:/Users/User/Desktop/Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
setwd("C:/Users/User/Desktop/Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
#set working directory
setwd("C:/Users/User/Desktop/Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
setwd("C:/Users/User/Desktop/Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#plot the graph with legends
with(DT.filter, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Energy sub metering", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), cex = 0.75)
## output histogram to PNG
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
#set working directory
setwd("C:/Users/User/Desktop/Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#output histogram to PNG
plot(DT.filter$Global_active_power~DT.filter$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
#set working directory
setwd("C:/Users/User/Desktop/Lab7")
library(data.table)
## Getting full dataset
DT<-fread("./household_power_consumption.txt", na.strings="?")
DT$Date <- as.Date(DT$Date, format="%d/%m/%Y")
## Subsetting the data
DT.filter <- subset(DT, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(DT)
## Converting dates
datetime <- paste(as.Date(DT.filter$Date), DT.filter$Time)
DT.filter$Datetime <- as.POSIXct(datetime)
#plot the graph with legends
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
with(DT.filter, {
plot(Global_active_power~Datetime, type="l",
ylab="Global Active Power", xlab="")
plot(Voltage~Datetime, type="l",
ylab="Voltage (volt)", xlab="datetime")
plot(Sub_metering_1~Datetime, type="l",
ylab="Energy sub metering", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), cex = 0.75)
plot(Global_reactive_power~Datetime, type="l",
ylab="Global_Rective_Power",xlab="datetime")
})
## Saving to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
